<?php namespace App\Extensions\Gateways\PhonePe;use App\Classes\Extensions\Gateway;use App\Helpers\ExtensionHelper;use App\Helpers\NotificationHelper;use App\Models\Order;use App\Models\Invoice;use Illuminate\Support\Facades\Http;use Illuminate\Http\Request;use Exception;class PhonePe extends Gateway{private $merchantId;private $saltKey;private $saltIndex;private $testMode;private $apiUrl;private $webhookUrl;private $appUrl;private $amountMod;public function __construct(){$this->merchantId=ExtensionHelper::getConfig("PhonePe","merchant_id");$this->saltKey=ExtensionHelper::getConfig("PhonePe","salt_key");$this->saltIndex=ExtensionHelper::getConfig("PhonePe","salt_index");$this->testMode=ExtensionHelper::getConfig("PhonePe","test_mode");$this->webhookUrl=ExtensionHelper::getConfig("PhonePe","webhook_url");$this->appUrl=env("APP_URL");$this->apiUrl=$this->testMode?"https://api-preprod.phonepe.com/apis/pg-sandbox":"https://api.phonepe.com/apis/hermes";$this->amountMod=ExtensionHelper::getConfig("PhonePe","amount_mod");}public function getMetadata(){return["display_name"=>"CARD/UPI/NETBANKING/WALLETS (PhonePe PG)","version"=>"1.1.0","author"=>"Debargha Chattaraj","website"=>"https://debargha.in",];}public function getConfig(){return[["name"=>"merchant_id","friendlyName"=>"PhonePe Merchant ID","type"=>"text","placeholder"=>"Your PhonePe Merchant ID","required"=>true,],["name"=>"salt_key","friendlyName"=>"PhonePe Salt Key","type"=>"text","placeholder"=>"Your PhonePe Salt Key","required"=>true,],["name"=>"salt_index","friendlyName"=>"PhonePe Salt Index","type"=>"text","placeholder"=>"Your PhonePe Salt Index","required"=>true,],["name"=>"amount_mod","friendlyName"=>"Amount Modifier (optional) | Read PhonePe-README.pdf for explanation.","type"=>"text","placeholder"=>"Example: +1 will add 1 to the total amount.","required"=>false,],["name"=>"webhook_url","friendlyName"=>"Discord Webhook URL (optional)","type"=>"text","placeholder"=>"Keep empty to disable or add an URL to enable.","required"=>false,],["name"=>"test_mode","friendlyName"=>"PhonePe Test Mode","type"=>"boolean","placeholder"=>"Enable/Disable Test mode","required"=>false,],];}private function sendDiscordWebhook($user,$order,$amount,$transactionId,$paymentType,$merchantTransactionId,$invoice){if(!empty($this->webhookUrl)){$message=["content"=>null,"embeds"=>[["title"=>"🪙 ₹".number_format($amount/100,2)." Received on PhonePe PG!","description"=>"[**`   INVOICE  ↗ `**]({$this->appUrl}/admin/invoices/{$invoice->id}) | [**`   ORDER  ↗ `**]({$this->appUrl}/admin/orders/{$order->id}) | [**`   USER  ↗ `**]({$this->appUrl}/admin/clients/{$user->id}/edit)","url"=>$this->appUrl,"color"=>65311,"fields"=>[["name"=>"📃 Transaction Details","value"=>"- TYPE: ||**` {$paymentType} `**||\n- MTXNID: ||**` {$merchantTransactionId} `**||\n- TXNID: ||**` {$transactionId} `**||","inline"=>true,],["name"=>"ℹ️  User Details","value"=>"- ID: ||**` {$user->id} `**||\n- Name: ||**` {$user->name} `**||\n- Email: ||**` {$user->email} `**||","inline"=>true,],],"footer"=>["text"=>"~ made by debargha.in",],"timestamp"=>now()->toIso8601String(),],],"attachments"=>[],];Http::post($this->webhookUrl,$message);}}public function pay($total,$products,$invoiceId){if(!empty($this->amountMod)){$pattern='/([+\-*\/%]+)([0-9.]+)/';preg_match_all($pattern,$this->amountMod,$matches,PREG_SET_ORDER);if(!empty($matches)){$modifiedAmount=$total;foreach($matches as $match){$operator=$match[1];$value=(float)$match[2];switch($operator){case '+':$modifiedAmount+=$value;break;case '-':$modifiedAmount-=$value;break;case '*':$modifiedAmount*=$value;break;case '/':if($value!=0){$modifiedAmount/=$value;}break;case '+%':$modifiedAmount+=$modifiedAmount*$value/100;break;case '-%':$modifiedAmount-=$modifiedAmount*$value/100;break;default:break;}}$modifiedAmount=round($modifiedAmount,2);}else{$modifiedAmount=$total;}}else{$modifiedAmount=$total;}$paymentData=["merchantId"=>$this->merchantId,"merchantTransactionId"=>$invoiceId."MT".time(),"amount"=>round($modifiedAmount,2)*100,"redirectUrl"=>route("clients.invoice.show",$invoiceId),"callbackUrl"=>route("phonepe.callback"),"redirectMode"=>"REDIRECT","mobileNumber"=>auth()->user()->email,"paymentInstrument"=>["type"=>"PAY_PAGE",],];$payloadMain=base64_encode(json_encode($paymentData));$checksum=hash("sha256",$payloadMain."/pg/v1/pay".$this->saltKey)."###".$this->saltIndex;$request=json_encode(["request"=>$payloadMain]);$responseData=Http::withHeaders(['Content-Type'=>'application/json','X-VERIFY'=>$checksum,'Accept'=>'application/json',])->post($this->apiUrl."/pg/v1/pay",['request'=>$payloadMain,]);$responseArray=$responseData->json();if($responseArray["success"]){return $responseArray["data"]["instrumentResponse"]["redirectInfo"]["url"];}}public function callback(Request $request){$responsePayload=$request->input("response");$responseArray=json_decode(base64_decode($responsePayload),true);$merchantTransactionId=$responseArray["data"]["merchantTransactionId"];$transactionId=$responseArray["data"]["transactionId"];$amount=$responseArray["data"]["amount"];$paymentType=$responseArray["data"]["paymentInstrument"]["type"];$invoiceId=substr($merchantTransactionId,0,strpos($merchantTransactionId,"MT"));$invoice=Invoice::where("id",$invoiceId)->firstOrFail();$order=Order::findOrFail($invoice->order_id);$user=$order->user;$receivedChecksum=$request->header("X-VERIFY");$checksum=hash("sha256",$responsePayload.$this->saltKey)."###".$this->saltIndex;if($checksum===$receivedChecksum){if($responseArray["code"]==="PAYMENT_SUCCESS"){ExtensionHelper::paymentDone($invoiceId,"PhonePe PG | {$paymentType}",$transactionId);NotificationHelper::sendPaymentSuccessfulNotification($user,$order,$amount,$invoice,$transactionId);$this->sendDiscordWebhook($user,$order,$amount,$transactionId,$paymentType,$merchantTransactionId,$invoice);}}}}